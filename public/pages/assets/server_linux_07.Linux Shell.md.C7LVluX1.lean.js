import{_ as i,c as a,a0 as e,o as l}from"./chunks/framework.CoVXEd1Z.js";const r=JSON.parse('{"title":"Linux Shell","description":"","frontmatter":{},"headers":[],"relativePath":"server/linux/07.Linux Shell.md","filePath":"server/linux/07.Linux Shell.md","lastUpdated":1734757381000}'),t={name:"server/linux/07.Linux Shell.md"};function p(h,s,n,d,k,o){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="linux-shell" tabindex="-1">Linux Shell <a class="header-anchor" href="#linux-shell" aria-label="Permalink to &quot;Linux Shell&quot;">​</a></h1><p><code>Shell</code>：是linux 中比较重要的概念，所有的命令其实都称之为shell命令。</p><p><code>Shell</code> 其实是linux 内核的外壳，用户通过shell 来控制内核进而驱动硬件做事情，这是他名字的由来。Linux 下，没有shell的话，就不能控制计算机，应为内核是用户不能直接控制的。</p><h2 id="查看在使用的shell-指令" tabindex="-1">查看在使用的Shell 指令 <a class="header-anchor" href="#查看在使用的shell-指令" aria-label="Permalink to &quot;查看在使用的Shell 指令&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">etc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">passwd</span></span></code></pre></div><h2 id="shell-提示符" tabindex="-1">Shell 提示符 <a class="header-anchor" href="#shell-提示符" aria-label="Permalink to &quot;Shell 提示符&quot;">​</a></h2><ol><li><p><code>root</code>用户提示符:</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li><li><p>普通用户提示符</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[_userName@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]$</span></span></code></pre></div></li></ol><p>格式解析：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@localhost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><ul><li><code>root</code>：用户名</li><li><code>localhost</code>：主机名，linux 主机的名默认是<code>loalhost</code>，可以通过<code>hostname</code>指令修改主机名。</li><li><code>~</code>：所在目录。</li></ul><h2 id="快捷键" tabindex="-1">快捷键 <a class="header-anchor" href="#快捷键" aria-label="Permalink to &quot;快捷键&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a # 光标跳转至正在输入的命令行的首部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> e # 光标跳转至正在输入的命令行的尾部</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c # 终止前台正在运行的程序</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d # 在shell中，表示退出当前shell</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z # 将任务暂停，挂至后台，执行fg命名继续执行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> l # 清屏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k # 删除从光标到行末的所有字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u # 删除从光标到行首的所有字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r # 搜索历史命令，利用关键字搜索</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Ctrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> w # 光标往前删除一个参数，以空格为分隔</span></span></code></pre></div><h2 id="history-历史命令" tabindex="-1">history 历史命令 <a class="header-anchor" href="#history-历史命令" aria-label="Permalink to &quot;history 历史命令&quot;">​</a></h2><ol><li><p>查看历史指令</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">history</span></span></code></pre></div></li><li><p>调用历史指令</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mv </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//按回车，会自动找最近一次执行的mv开头的指令进行执行</span></span></code></pre></div></li><li><p>清除历史指令</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">history </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c</span></span></code></pre></div><p><code>history -c</code>指令只是清除内存中的历史指令。</p><p>删除主文件夹下面的<code>.bash_history</code>，这时清除硬盘中的历史指令，内存中的指令会自动备份。</p><p>每个用户家目录下都有一个<code>.bash_history</code>，记录的是自己用户的历史指令。</p><p><code>.bash_history</code>默认记录最近的1000条指令，通过<code>echo $HISTSIZT</code> 可以查看。也可以通过修改配置文件<code>/etc/profile</code>文件进行修改。</p></li></ol><h2 id="命令别名" tabindex="-1">命令别名 <a class="header-anchor" href="#命令别名" aria-label="Permalink to &quot;命令别名&quot;">​</a></h2><p><code>alias</code> 别名。</p><ol><li><p>查看别名</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alias</span></span></code></pre></div></li><li><p>设置别名，在<code>mac</code>系统中，在用户的家目录中编辑<code>.zshrc</code>文件，添加以下内容</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">alias ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ipconfig getifaddr en1&#39;</span></span></code></pre></div></li><li><p>然后就可以使用<code>ip</code>指令查看ip地址</p></li></ol>`,17)]))}const E=i(t,[["render",p]]);export{r as __pageData,E as default};
