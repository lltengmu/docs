import{_ as n,c as l,a0 as Q,j as t,a as e,o}from"./chunks/framework.CoVXEd1Z.js";const r="/assets/Data-Communication-Model.sFpn-sP_.png",x=JSON.parse('{"title":"数据通信的基础知识","description":"","frontmatter":{},"headers":[],"relativePath":"web-development-basics/computer-network/物理层/02.数据通信基础知识.md","filePath":"web-development-basics/computer-network/物理层/02.数据通信基础知识.md","lastUpdated":1736416014000}'),s={name:"web-development-basics/computer-network/物理层/02.数据通信基础知识.md"},i={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},d={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.552ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.202ex",height:"4.588ex",role:"img",focusable:"false",viewBox:"0 -1342 5393.2 2028","aria-hidden":"true"};function p(T,a,m,h,u,c){return o(),l("div",null,[a[5]||(a[5]=Q('<h1 id="数据通信的基础知识" tabindex="-1">数据通信的基础知识 <a class="header-anchor" href="#数据通信的基础知识" aria-label="Permalink to &quot;数据通信的基础知识&quot;">​</a></h1><h2 id="数据通信模型" tabindex="-1">数据通信模型 <a class="header-anchor" href="#数据通信模型" aria-label="Permalink to &quot;数据通信模型&quot;">​</a></h2><p><img src="'+r+'" alt="Data-Communication-Model"></p><h2 id="相关术语" tabindex="-1">相关术语 <a class="header-anchor" href="#相关术语" aria-label="Permalink to &quot;相关术语&quot;">​</a></h2><ol><li><p>通信的目的是传送<code>消息</code>（消息：语音，文字，图像，视频）。</p></li><li><p>数据(data)：传送信息的实体，通常是有意义的符号序列。</p></li><li><p>信号：数据的电气/电磁的表现，是数据在传输过程中的存在形式。</p><ul><li>数字信号（离散信号）：代表消息的参数的取值是离散的。</li><li>模拟信号（连续信号）：代表消息的参数的取值是连续的。</li></ul></li><li><p>信源：产生和发送数据的源头。</p></li><li><p>信宿：接收数据的终点。</p></li><li><p>信道：信号的传输媒介。一般用来表示向某一个方向传送信息的介质，因此一条通信线路往往包含一条发送信道和一条接收信道。</p><ul><li>按传输信号分：模拟信道（传送模拟信号） 数字信道（传送数字信号）</li><li>按传输介质分：1.无线信道 2.有线信道</li></ul></li><li><p>码元：是指用一个固定时长的信号波形（数字脉冲），代表不同离散值的基本波形，是数字通信中数字型号的计量单位，这个时长内的信号称为k进制码元，而该时长称为码元宽度。当码元的离散状态有M个时（M大于2），此时码元为M进制码元。1码元可以携带多个比特的信息量。例如，在使用二进制编码时，只有两种不同的码元，一种代表0状态，另一种代表1状态。</p></li></ol><h2 id="三种通信方式" tabindex="-1">三种通信方式 <a class="header-anchor" href="#三种通信方式" aria-label="Permalink to &quot;三种通信方式&quot;">​</a></h2><p>从通信双方交互方式看，可以有三种基本方式：</p><ol><li>单工通信：只有一个方向的通信而没有反方向的交互，仅需要<code>一条</code>信道。</li><li>半双工通信/双向交替通信：通信的双方都可以发送或接收信息，但任何一方都不能同时发送和接收，需要两条信道。</li><li>全双工通信/双向同时通信：通信双方可以同时发送和接收信息，也需要两条信道。</li></ol><h2 id="串行传输-并行传输" tabindex="-1">串行传输&amp;并行传输 <a class="header-anchor" href="#串行传输-并行传输" aria-label="Permalink to &quot;串行传输&amp;并行传输&quot;">​</a></h2><p><strong>串行传输</strong></p><p>表示将一个字符的8位二进制数按由低到高位的顺序依次发送。</p><p><strong>并行传输</strong></p><p>将表示一个字符的8位二进制数同时通过8条信道发送。</p><h2 id="同步传输-异步传输" tabindex="-1">同步传输&amp;异步传输 <a class="header-anchor" href="#同步传输-异步传输" aria-label="Permalink to &quot;同步传输&amp;异步传输&quot;">​</a></h2><p><strong>同步传输</strong></p><p>在同步传输的模式下，数据的传送是以一个数据区块位单位，因此同步传输又称为区块传输。在传送数据时，需先送出1个或多个同步字符，再送出整批的数据。</p><p><strong>异步传输</strong></p><p>异步传输将比特分层小组进行传送，小组可以时8位的1个字符或更长。发送方可以再任何时刻发送这些比特组，而接收方不知道它们会在什么时候到达。传送数据时，加一个字符起始位和一个字符终止位。</p><h2 id="数字通信系统传输数据传输速率的两种表示方法" tabindex="-1">数字通信系统传输数据传输速率的两种表示方法 <a class="header-anchor" href="#数字通信系统传输数据传输速率的两种表示方法" aria-label="Permalink to &quot;数字通信系统传输数据传输速率的两种表示方法&quot;">​</a></h2><p>速率也叫数据率，是指数据的传输速率，表示单位时间内传输的数据量。可以用<code>码元传输速率</code>和<code>信息传输速率</code>表示。</p>',20)),t("ul",null,[t("li",null,[a[2]||(a[2]=t("p",null,[t("strong",null,"码元传输速率"),e("：别名码元速率、波形速率、调制速率、符号速率等，它表示单位时间内数字通信系统所传输的码元个数（也可称为脉冲个数或信号变化的次数），单位是"),t("code",null,"波特(Baud)"),e("。1波特表示数字通信系统美妙传输一个码元。")],-1)),a[3]||(a[3]=t("p",null,[e("数字信号有多进制和二进制之分，但码元速率与进制数无关，只与"),t("code",null,"码元长度T有关"),e("。数学表达式为：")],-1)),t("mjx-container",i,[(o(),l("svg",d,a[0]||(a[0]=[Q('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(792,-150) scale(0.707)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1656.5,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mfrac" transform="translate(2712.2,0)"><g data-mml-node="mn" transform="translate(322,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><rect width="904" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(3856.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4245.2,0)"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5004.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msub",null,[t("mi",null,"R"),t("mi",null,"B")]),t("mo",null,"="),t("mfrac",null,[t("mn",null,"1"),t("mi",null,"T")]),t("mo",{stretchy:"false"},"("),t("mi",null,"B"),t("mo",{stretchy:"false"},")")])],-1))])]),a[4]||(a[4]=t("li",null,[t("p",null,[t("strong",null,"信息传输速率"),e("：别名信息速率，比特等，表示单位时间内数字通信系统传输的二进制码元个数（即比特数），单位是比特/秒（b/s）。")])],-1))]),a[6]||(a[6]=t("p",null,"关系：若一个码元携带 n bit的信息量，则M Baund的码元传输速率所对应的信息传输速率为 M x n bit/s。",-1))])}const b=n(s,[["render",p]]);export{x as __pageData,b as default};
