import{_ as o,c as a,a0 as d,o as c}from"./chunks/framework.CoVXEd1Z.js";const b=JSON.parse('{"title":"网络的性能指标","description":"","frontmatter":{},"headers":[],"relativePath":"web-development-basics/computer-network/概述/04.网络的性能指标.md","filePath":"web-development-basics/computer-network/概述/04.网络的性能指标.md","lastUpdated":1736255633000}'),t={name:"web-development-basics/computer-network/概述/04.网络的性能指标.md"};function p(r,e,i,l,s,n){return c(),a("div",null,e[0]||(e[0]=[d('<h1 id="网络的性能指标" tabindex="-1">网络的性能指标 <a class="header-anchor" href="#网络的性能指标" aria-label="Permalink to &quot;网络的性能指标&quot;">​</a></h1><h2 id="速率" tabindex="-1">速率 <a class="header-anchor" href="#速率" aria-label="Permalink to &quot;速率&quot;">​</a></h2><p><strong>信道</strong>：表示某一方向传送信息的通道（信道 != 通信线路），一条通信线路在逻辑上往往对应一条<code>发送信道</code>和<code>接收信道</code>。</p><p>速率：指连接到网络上的<code>节点</code>在信道上传输数据的速率。也称<code>数据率</code>或者<code>比特率</code>、<code>数据传输率</code>。</p><p>单位：<code>bit/s</code>、<code>b/s</code>、<code>bps</code>（bit per seond）。有时也用<code>B/s</code>（1B=8b， B = Bity字节，b = bit 比特）。</p><p>计算机中速率的数量前缀：K (千) x 10^3^ =&gt; M(兆) x 10^3^ =&gt; G(吉) x 10^3^ =&gt; T(太)</p><h2 id="带宽" tabindex="-1">带宽 <a class="header-anchor" href="#带宽" aria-label="Permalink to &quot;带宽&quot;">​</a></h2><p>某个<code>信道</code>所能传送的<code>最高数据率</code>。</p><p>节点间通信实际能达到的最高速率，由<code>带宽</code>、<code>节点性能</code>共同限制。</p><p>单位：bps（或记为<code>b/s</code>,<code>bit/s</code>，可加数据前缀<code>K</code>,<code>M</code>,<code>G</code>,<code>T</code>）。</p><p>在通信领域中，带宽的定义：表示<code>允许通过的信号频带范围</code>。</p><p>无论是有线通信还是无线通信，都是通过电磁波传递信号。电磁波可以携带<code>数据</code>。</p><p>信道：是传播<code>电磁波信号</code>。</p><p>电磁波的性质：</p><ul><li>波长</li><li>频率</li></ul><h2 id="吞吐量" tabindex="-1">吞吐量 <a class="header-anchor" href="#吞吐量" aria-label="Permalink to &quot;吞吐量&quot;">​</a></h2><p>描述某个网络（或节点、信道）在单位时间内通过的实际数据量（实际的综合数据量）。</p><h2 id="时延" tabindex="-1">时延 <a class="header-anchor" href="#时延" aria-label="Permalink to &quot;时延&quot;">​</a></h2><p>指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。有时也称为<code>延迟</code>或<code>迟延</code>。（数据从A节点传输到B节点中间所需要的时间。）</p><p>总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延</p><ul><li><p>发送时延：节点将数据推向信道所花的时间</p><p>公式：数据长度｜数据大小(bit) / 发送速率(bit/s)</p></li><li><p>传播时延：电磁波在信道中传播一定的距离所花的时间。</p><p>公式：信道长度(m) / 电磁波在信道中的传播速度(m/s)</p></li><li><p>处理时延：被路由器处理所花的时间（如分析首部、查找存储转发表）</p></li><li><p>排队时延：数据排队进入、排队发出路由器所花的时间。</p></li></ul><h2 id="时延带宽积" tabindex="-1">时延带宽积 <a class="header-anchor" href="#时延带宽积" aria-label="Permalink to &quot;时延带宽积&quot;">​</a></h2><p>时延带宽积 = 传播时延 x 带宽</p><p>含义：一条链路中，已从发送端发出但尚未到达接收端的最大比特数。</p><h2 id="往返时延" tabindex="-1">往返时延 <a class="header-anchor" href="#往返时延" aria-label="Permalink to &quot;往返时延&quot;">​</a></h2><p>表示从发送方发送完数据，到发送方收到来自接受方的确认总共经历的时间</p><h2 id="信道利用率" tabindex="-1">信道利用率 <a class="header-anchor" href="#信道利用率" aria-label="Permalink to &quot;信道利用率&quot;">​</a></h2><p>某个信道有百分之多少时间是有数据通过的。</p><p>信道利用率 = 有数据通过的时间 / 有数据通过的时间 + 没有数据通过的时间</p><p>信道利用率不能太低，浪费资源。也不能太高，容易导致网络堵塞。</p>',30)]))}const u=o(t,[["render",p]]);export{b as __pageData,u as default};
