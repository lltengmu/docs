import{_ as a,c as s,a0 as i,o as t}from"./chunks/framework.CoVXEd1Z.js";const u=JSON.parse('{"title":"文件查找","description":"","frontmatter":{},"headers":[],"relativePath":"server/linux/12.文件查找.md","filePath":"server/linux/12.文件查找.md","lastUpdated":1734757381000}'),n={name:"server/linux/12.文件查找.md"};function p(d,e,o,l,c,h){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="文件查找" tabindex="-1">文件查找 <a class="header-anchor" href="#文件查找" aria-label="Permalink to &quot;文件查找&quot;">​</a></h1><p>linux 没有图形界面，需要通过<code>find</code>指令查找文件。</p><h2 id="普通文件查找" tabindex="-1">普通文件查找 <a class="header-anchor" href="#普通文件查找" aria-label="Permalink to &quot;普通文件查找&quot;">​</a></h2><ol><li><p>普通查询</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -maxdepth 1 -type f -name &quot;*.txt&quot;</span></span></code></pre></div><ul><li><code>-type</code>：表示文件类型，f表示文件，不指定类型的话，文件和目录都会查找</li><li><code>-maxdepth</code>：表示查找深度，目录层级的意思，不指定则按照最大深度来找，就是会遍历目录下的所有文件和目录进行查找。</li><li>“*.txt”：表示匹配任意内容开头的文件，但是必须是以<code>.txt</code>结尾的文件。</li></ul></li></ol><h2 id="按照文件大小查找" tabindex="-1">按照文件大小查找 <a class="header-anchor" href="#按照文件大小查找" aria-label="Permalink to &quot;按照文件大小查找&quot;">​</a></h2><p>单位<code>k</code>,<code>M</code>,<code>G</code>，<code>k</code>要小写，<code>M</code> 和<code>G</code>要大写，不带单位就按照B单位来查找</p><ol><li><p>查找文件大小 小于<code>1M</code>的文件。</p><p>指令示例：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -size -1M</span></span></code></pre></div></li><li><p>查找文件大小大于<code>2M</code>的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -size +2M</span></span></code></pre></div></li><li><p>查找文件大小在<code>1M</code>到<code>2M</code>之间的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -size +1M -and -size -2M</span></span></code></pre></div></li></ol><h2 id="忽略大小写查询" tabindex="-1">忽略大小写查询 <a class="header-anchor" href="#忽略大小写查询" aria-label="Permalink to &quot;忽略大小写查询&quot;">​</a></h2><p>假设有两个文件名分别是:<code>About.txt</code>,<code>about.txt</code>。想要查询时不区分大小写，两个文件都要搜索到，可以使用以下示例指令。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -iname &quot;a*.txt&quot;</span></span></code></pre></div><ul><li><code>-iname</code>：<code>i</code>是<code>ignore</code>的简写，忽略的意思</li></ul><h2 id="根据时间查找文件" tabindex="-1">根据时间查找文件 <a class="header-anchor" href="#根据时间查找文件" aria-label="Permalink to &quot;根据时间查找文件&quot;">​</a></h2><ol><li><p>查询文件相关的时间信息</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//指令</span></span>
<span class="line"><span>stat _fileName</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//例子</span></span>
<span class="line"><span>stat a.txt</span></span>
<span class="line"><span>  File: a.txt</span></span>
<span class="line"><span>  Size: 12        	Blocks: 8          IO Block: 4096   regular file</span></span>
<span class="line"><span>Device: 2ch/44d	Inode: 94128       Links: 1</span></span>
<span class="line"><span>Access: (0664/-rw-rw-r--)  Uid: ( 1002/   Eddie)   Gid: ( 1002/   Eddie)</span></span>
<span class="line"><span>Access: 2024-12-18 23:01:48.970195981 +0800 # Access time</span></span>
<span class="line"><span>Modify: 2024-12-18 23:01:44.692038712 +0800 # Modify time</span></span>
<span class="line"><span>Change: 2024-12-18 23:01:44.692038712 +0800 # Change time</span></span>
<span class="line"><span> Birth: -</span></span></code></pre></div></li><li><p>在文件查询指令中添加时间参数</p><p>时间参数：<code>atime</code>,<code>mtime</code>,<code>ctime</code>,<code>amin</code>,<code>mmin</code>,<code>cmin</code>。（<code>time</code>是按照天数查找，<code>min</code>是按照分钟查找）。</p><ul><li><p>按照天数查找:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type -f -mtime -1</span></span></code></pre></div><p><code>-mtime -1</code>：表示查询一天以内修改的文件，<code>m</code>表示时间类型是<code>Modify time</code>，<code>time</code>表示按天查找，<code>-1</code>表示一天以内,<code>+1</code>表示一天以前。</p></li><li><p>时间单位为分钟：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -mmin -20</span></span></code></pre></div><p>表示20分钟内修改过的文件</p></li><li><p>查找一个区间时间内的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -type f -mtime +1 -and -mtime -10</span></span></code></pre></div></li></ul></li></ol><h2 id="取反" tabindex="-1">取反 <a class="header-anchor" href="#取反" aria-label="Permalink to &quot;取反&quot;">​</a></h2><p><code>!</code>对查询取反。</p><ol><li><p>找名称中不是.txt结尾的文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /root -type f ! -name &quot;*.txt&quot;</span></span></code></pre></div></li><li><p>找文件夹</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /root ! -type f</span></span></code></pre></div></li></ol><h2 id="根据用户查找文件" tabindex="-1">根据用户查找文件 <a class="header-anchor" href="#根据用户查找文件" aria-label="Permalink to &quot;根据用户查找文件&quot;">​</a></h2><p>查找某个用户的文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -user _userName</span></span></code></pre></div><h2 id="对找出的文件进行处理" tabindex="-1">对找出的文件进行处理 <a class="header-anchor" href="#对找出的文件进行处理" aria-label="Permalink to &quot;对找出的文件进行处理&quot;">​</a></h2><p>比如说找到 用户为<code>Eddie</code>并且是<code>.txt</code>结尾的文件，然后显示它们的权限信息。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>find /tmp -user Eddie -type f -name &quot;*.txt&quot; -exec ls -l {} \\;</span></span></code></pre></div><ul><li><code>-exec</code>：表示要追加的指令</li><li><code>{}</code>：表示查询指令的搜索结果，这个大括号要记得写。</li><li><code>\\;</code>对<code>;</code>进行转义</li></ul><p>可以使用<code>find -help</code>查看更多功能。</p>`,24)]))}const m=a(n,[["render",p]]);export{u as __pageData,m as default};
