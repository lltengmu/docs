import{_ as e,c as a,o as n,ae as p}from"./chunks/framework.Dh1jimFm.js";const u=JSON.parse('{"title":"系统优化","description":"","frontmatter":{},"headers":[],"relativePath":"server/linux/15.系统优化.md","filePath":"server/linux/15.系统优化.md","lastUpdated":1734757381000}'),i={name:"server/linux/15.系统优化.md"};function l(t,s,c,o,d,h){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="系统优化" tabindex="-1">系统优化 <a class="header-anchor" href="#系统优化" aria-label="Permalink to &quot;系统优化&quot;">​</a></h1><p>现在的操作系统需要优化的地方不多了，甚至就可以直接使用，之前的老系统都需要好多优化才行。</p><h2 id="优化" tabindex="-1">优化 <a class="header-anchor" href="#优化" aria-label="Permalink to &quot;优化&quot;">​</a></h2><ol><li><p>优化<code>ssh</code>，以防连接过慢</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>//修改这个配置文件之前，最好先做备份，</span></span>
<span class="line"><span>cp /ect/ssh/sshd_config /ect/ssh/sshd_config.bak</span></span>
<span class="line"><span>vi /etc/ssh/sshd_config</span></span></code></pre></div><p>修改<code>79</code>行：<code>GSSAPIAuthentication no</code>。</p><p>修改<code>115</code>行：<code>UseDNS no </code>，别忘了删除前面的<code>#</code>。</p></li><li><p>修改<code>selinux</code></p><p>膝盖配置文件，永久关闭</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vi /etc/ssh/sshd_config</span></span>
<span class="line"><span># 第7行修改为</span></span>
<span class="line"><span>SELINUX=disbabled</span></span>
<span class="line"><span></span></span>
<span class="line"><span>//临时生效 </span></span>
<span class="line"><span>setenfoce 0</span></span></code></pre></div></li><li><p>关闭<code>firewalld</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>systemctl stop firewalld</span></span>
<span class="line"><span>systemctl disable firewalld</span></span></code></pre></div></li><li><p>安装常用软件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>yum install lrzsz vim tree wget net-tools screen bash-completion tcpdump -y</span></span></code></pre></div><ul><li><p><code>net-tools</code>：网络相关工具，比如<code>ipconfig</code>，<code>ipconfig ens33</code>，<code>rpm -q</code>是查看安装了哪些<code>rpm</code>包。具体这个软件有哪些命令，可以通过<code>rpm -qa net-tools</code>来查看。</p></li><li><p><code>screen</code>：屏幕工具。可能需要远程连接某个服务器，如果服务器距离比较远，我们通过<code>Xshell</code>等远程连接到目标服务器，中间要经过很多个网络设备，很容易断开连接，如果我们正在执行某个程序，突然断开的话，执行的程序也会自动中断。如果我们不想让程序中断，就需要使用<code>screen</code>命令。</p><ol><li><p>单独开一个终端</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>screen</span></span></code></pre></div></li><li><p>查看屏幕</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>screen -ls</span></span></code></pre></div></li><li><p>回复窗口</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>screen -r 窗口id</span></span></code></pre></div></li></ol></li><li><p><code>bash-completion</code>：这个软件叫做超级自动补全。这个包安装之后需要重新登录一下。</p></li></ul></li></ol>`,4)]))}const g=e(i,[["render",l]]);export{u as __pageData,g as default};
