import{_ as r,c as n,o as Q,ae as l,j as t,a as e}from"./chunks/framework.Dh1jimFm.js";const o="/assets/Character-filling-method.Di4KXVne.png",m="/assets/Character-filling-process.IDU7PNnT.png",s="/assets/Zero-bit-padding-method.CfJByFBJ.png",i="/assets/sending-window.CL96W804.png",T="/assets/Receiving-Window.D9MjsE6A.png",d="/assets/The-complete-process-of-GBN.B9roBEvu.png",C=JSON.parse('{"title":"概述","description":"","frontmatter":{},"headers":[],"relativePath":"web-development-basics/computer-network/数据链路层/01.数据链路层.md","filePath":"web-development-basics/computer-network/数据链路层/01.数据链路层.md","lastUpdated":1736416014000}'),p={name:"web-development-basics/computer-network/数据链路层/01.数据链路层.md"},f={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.172ex"},xmlns:"http://www.w3.org/2000/svg",width:"93.62ex",height:"5.475ex",role:"img",focusable:"false",viewBox:"0 -1460 41380.3 2420","aria-hidden":"true"},x={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"23.205ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 10256.6 1000","aria-hidden":"true"},u={start:"2"},H={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},c={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.373ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.645ex",height:"2.373ex",role:"img",focusable:"false",viewBox:"0 -883.9 10009.3 1048.8","aria-hidden":"true"},y={tabindex:"0",class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},w={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.396ex"},xmlns:"http://www.w3.org/2000/svg",width:"14.695ex",height:"2.396ex",role:"img",focusable:"false",viewBox:"0 -883.9 6495 1058.9","aria-hidden":"true"};function v(_,a,L,k,b,M){return Q(),n("div",null,[a[39]||(a[39]=l('<h1 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h1><p>数据链路层负责通过一条链路从一个节点向另一个物理链路直接相连的相邻节点传送数据报。</p><h2 id="相关术语" tabindex="-1">相关术语 <a class="header-anchor" href="#相关术语" aria-label="Permalink to &quot;相关术语&quot;">​</a></h2><p><strong>数据链路</strong>：网络中两个节点之间的逻辑通道，把实现控制数据传输协议的硬件和软件加到链路上就构成了数据链路。</p><p><strong>帧</strong>：链路层的协议数据单元，封装网络层数据报。</p><p><strong>透明传输</strong>：是指不管所传输数据是什么样的比特组合，都应当能够在链路上传送。因此，链路层就“看不见”有什么妨碍数据传输的东西。当所传数据中的比特组合恰巧与某一个控制信息完全一样时，就必须采取适当的错误，使接收方不会将这样的数据误认为是某种控制信息。这样才能保证数据链路层的传输是透明的。</p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><p>数据链路层在物理层的提供的服务基础之上向网络层提供服务，其最基本的服务是将源自网络层来的数据可靠地传输到相邻节点的目标机网络层。其主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的物理连接改造为逻辑上无差错的数据链路，使之对网络层表现为一条无差错的链路。</p>',8)),t("ol",null,[a[38]||(a[38]=l('<li><p>为网络层提供服务。无确认无连接服务，有确认有连接服务，有确认面向连接服务。</p></li><li><p>链路管理：即连接的建立、维持、释放（用于面向连接的服务）。</p></li><li><p>组帧。</p><ul><li><p>封装成帧：就是在一段数据的前后部分添加首部和尾部，这样就构成了一个帧。接收端在物理层上交的比特流后，就能根据首部和尾部的标记，从收到的比特流中识别帧的开始和结束。首部和尾部包含许多的控制信息，它们的一个重要作用：<strong>帧定界</strong>（确定帧的界限）。</p><p><strong>帧同步</strong>：<strong>接收方</strong>应当能从接收到的二进制比特流中区分出帧的起始和终止。</p><p>组帧的四种方法：</p><ol><li><p>字符计数法</p><p>帧首部使用一个计数字段（第一个字节，八位）来标明帧内字符数。痛点：容易出错，不推荐使用的方法。</p></li><li><p>字符（节）填充法</p><p><img src="'+o+'" alt="Character-filling-method"></p><p>使用场景：</p><ol><li>当传输的帧是由文本文件组成时（文本文件的字符都是从键盘上输入的，都是<code>ASCII</code>码）。不管从键盘上输入什么字符都可以放在帧里传输过去，即<code>透明传输</code>。</li><li>当传送的帧是由非<code>ASCII</code>码的文本文件组成时（二进制代码的程序或图像等）。就要采用<strong>字符填充方法实现透明传输</strong>。</li></ol><p>字符填充法的流程：</p><p><img src="'+m+'" alt="Character-filling-process"></p></li><li><p>零比特填充法</p><p>允许数据帧当中包含任意个数的比特。</p><p>图示：</p><p><img src="'+s+'" alt="Zero-bit-padding-method"></p><p>与字符填充法的区别在于：标志符的二进制位是一样的，即<code>01111110</code>。</p><p>当在数据部分遇到与标志符一样的比特组合时：</p><ol><li>在发送端，扫描整个信息字段，只要连续5个1，就立即填入1个0。</li><li>在接收端收到一个帧时，先找到标志字段确定边界，再用硬件对比比特流进行扫描。发现连续5个1时，就把后面的0删除。</li></ol><p>保证了透明传输：在传送的比特流中可以传送任意比特组合，而不会引起帧边界的判断错误。</p></li><li><p>违规编码法</p><p>使用&quot;高-高&quot;，“低-低”的电气电平特性来定界帧的起始和终止。</p><p>由于字节计数法中<code>Count</code>字段的脆弱性（其值若有差错将导致灾难性后果）即字符填充实现上的复杂性和不兼容性，目前较普遍使用的帧同步法是<code>比特填充</code>和违<code>规编码法</code>。</p></li></ol></li></ul></li>',3)),t("li",null,[a[13]||(a[13]=l("<p>流量控制。</p><p><code>较高的发送速度</code>和<code>较低的接收能力</code>的不匹配，会造成传输出错，因此流量控制也是数据链路层的一项重要工作。</p><p>链路层流量控制和传输层流量控制的区别：</p><ul><li>数据链路层的流量控制是点对点的（相邻节点之间的流量控制），而传输层的流量控制是端到端的（发送端和接收端）。</li><li>数据链路层流量控制手段：接受方收不下就不回复确认。</li><li>传输层流量控制手段：接收端给发送端一个窗口公告。</li></ul><p>流量控制的方法：</p><ol><li><strong>停止-等待协议</strong></li></ol><p>每发送完一个帧就停止发送，等待对方的确认，在收到确认后再发送上下一个帧 。</p><p><strong>为什么要有停止-等待协议？</strong></p><ol><li>处理比特出差错之外，底层信道还会出现丢包问题。（丢包：物理线路故障、设备故障、病毒攻击、路由信息错误等原因，会导致数据包的丢失）。</li><li>为例实现流量控制。</li></ol><p><strong>停止-等待协议的前提：</strong></p><ul><li>虽然现在常有双工通信的方式，为了讨论方便，仅考虑一方发送数据，一方接收数据。</li><li>因为在讨论可靠性传输原理，所以不考虑数据是在哪一个层次上传递。</li></ul><p><strong>优缺点：</strong></p><ul><li>优点：简单</li><li>缺点：信道利用率太低</li></ul><p><strong>求值信道利用率：</strong></p><p>信道利用率表示发送方在一个发送周期内，有效地发送数据所需的时间占整个发送周期的比率。</p>",15)),t("mjx-container",f,[(Q(),n("svg",g,a[0]||(a[0]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">信</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">道</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">利</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mi" transform="translate(5000,0)"><path data-c="1D448" d="M107 637Q73 637 71 641Q70 643 70 649Q70 673 81 682Q83 683 98 683Q139 681 234 681Q268 681 297 681T342 682T362 682Q378 682 378 672Q378 670 376 658Q371 641 366 638H364Q362 638 359 638T352 638T343 637T334 637Q295 636 284 634T266 623Q265 621 238 518T184 302T154 169Q152 155 152 140Q152 86 183 55T269 24Q336 24 403 69T501 205L552 406Q599 598 599 606Q599 633 535 637Q511 637 511 648Q511 650 513 660Q517 676 519 679T529 683Q532 683 561 682T645 680Q696 680 723 681T752 682Q767 682 767 672Q767 650 759 642Q756 637 737 637Q666 633 648 597Q646 592 598 404Q557 235 548 205Q515 105 433 42T263 -22Q171 -22 116 34T60 167V183Q60 201 115 421Q164 622 164 628Q164 635 107 637Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6044.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mfrac" transform="translate(7100.6,0)"><g data-mml-node="mrow" transform="translate(10624.6,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(1389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(2389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(3389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(4389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(5389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(6389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(7389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">帧</text></g><g data-mml-node="mi" transform="translate(8389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(9389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(10389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">延</text></g><g data-mml-node="mo" transform="translate(11389,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(11778,0)"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(617,-150) scale(0.707)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(1389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(2389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">方</text></g><g data-mml-node="mi" transform="translate(3389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(4389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(5389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">数</text></g><g data-mml-node="mi" transform="translate(6389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">据</text></g><g data-mml-node="mi" transform="translate(7389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">帧</text></g><g data-mml-node="mi" transform="translate(8389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">的</text></g><g data-mml-node="mi" transform="translate(9389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(10389,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">延</text></g><g data-mml-node="mo" transform="translate(11389,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(11778,0)"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(617,-150) scale(0.707)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(13252.7,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(14252.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(15252.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">往</text></g><g data-mml-node="mi" transform="translate(16252.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">返</text></g><g data-mml-node="mi" transform="translate(17252.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(18252.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">延</text></g><g data-mml-node="mi" transform="translate(19252.9,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="mi" transform="translate(20252.9,0)"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(21011.9,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(21715.9,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(22642.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(23642.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">（</text></g><g data-mml-node="mi" transform="translate(24642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">确</text></g><g data-mml-node="mi" transform="translate(25642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">认</text></g><g data-mml-node="mi" transform="translate(26642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">帧</text></g><g data-mml-node="mi" transform="translate(27642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">发</text></g><g data-mml-node="mi" transform="translate(28642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">送</text></g><g data-mml-node="mi" transform="translate(29642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">时</text></g><g data-mml-node="mi" transform="translate(30642.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">延</text></g><g data-mml-node="mi" transform="translate(31642.4,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">）</text></g><g data-mml-node="msub" transform="translate(32642.4,0)"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(617,-152.7) scale(0.707)"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z" style="stroke-width:3;"></path></g></g></g><rect width="34039.7" height="60" x="120" y="220"></rect></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("mi",{mathvariant:"normal"},"信"),t("mi",{mathvariant:"normal"},"道"),t("mi",{mathvariant:"normal"},"利"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"率"),t("mi",null,"U"),t("mo",null,"="),t("mfrac",null,[t("mrow",null,[t("mo",{stretchy:"false"},"("),t("mi",{mathvariant:"normal"},"发"),t("mi",{mathvariant:"normal"},"送"),t("mi",{mathvariant:"normal"},"方"),t("mi",{mathvariant:"normal"},"发"),t("mi",{mathvariant:"normal"},"送"),t("mi",{mathvariant:"normal"},"数"),t("mi",{mathvariant:"normal"},"据"),t("mi",{mathvariant:"normal"},"帧"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"时"),t("mi",{mathvariant:"normal"},"延"),t("mo",{stretchy:"false"},")"),t("msub",null,[t("mi",null,"T"),t("mi",null,"D")])]),t("mrow",null,[t("mo",{stretchy:"false"},"("),t("mi",{mathvariant:"normal"},"发"),t("mi",{mathvariant:"normal"},"送"),t("mi",{mathvariant:"normal"},"方"),t("mi",{mathvariant:"normal"},"发"),t("mi",{mathvariant:"normal"},"送"),t("mi",{mathvariant:"normal"},"数"),t("mi",{mathvariant:"normal"},"据"),t("mi",{mathvariant:"normal"},"帧"),t("mi",{mathvariant:"normal"},"的"),t("mi",{mathvariant:"normal"},"时"),t("mi",{mathvariant:"normal"},"延"),t("mo",{stretchy:"false"},")"),t("msub",null,[t("mi",null,"T"),t("mi",null,"D")]),t("mo",null,"+"),t("mi",null,"（"),t("mi",{mathvariant:"normal"},"往"),t("mi",{mathvariant:"normal"},"返"),t("mi",{mathvariant:"normal"},"时"),t("mi",{mathvariant:"normal"},"延"),t("mi",null,"）"),t("mi",null,"R"),t("mi",null,"T"),t("mi",null,"T"),t("mo",null,"+"),t("mi",null,"（"),t("mi",{mathvariant:"normal"},"确"),t("mi",{mathvariant:"normal"},"认"),t("mi",{mathvariant:"normal"},"帧"),t("mi",{mathvariant:"normal"},"发"),t("mi",{mathvariant:"normal"},"送"),t("mi",{mathvariant:"normal"},"时"),t("mi",{mathvariant:"normal"},"延"),t("mi",null,"）"),t("msub",null,[t("mi",null,"T"),t("mi",null,"A")])])])])],-1))]),a[14]||(a[14]=t("p",null,"另一个公式：",-1)),t("mjx-container",x,[(Q(),n("svg",h,a[2]||(a[2]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">信</text></g><g data-mml-node="mi" transform="translate(1000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">道</text></g><g data-mml-node="mi" transform="translate(2000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">利</text></g><g data-mml-node="mi" transform="translate(3000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">用</text></g><g data-mml-node="mi" transform="translate(4000,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(5277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6333.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6722.6,0)"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7403.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(7903.6,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8663.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(9052.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(9552.6,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[3]||(a[3]=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("mi",{mathvariant:"normal"},"信"),t("mi",{mathvariant:"normal"},"道"),t("mi",{mathvariant:"normal"},"利"),t("mi",{mathvariant:"normal"},"用"),t("mi",{mathvariant:"normal"},"率"),t("mo",null,"="),t("mo",{stretchy:"false"},"("),t("mi",null,"L"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"/")]),t("mi",null,"C"),t("mo",{stretchy:"false"},")"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mo",null,"/")]),t("mi",null,"T")])],-1))]),a[15]||(a[15]=t("p",null,"T:发送周期",-1)),a[16]||(a[16]=t("p",null,"L:在发送者周期内发送多少比特数据",-1)),a[17]||(a[17]=t("p",null,"C:发送方的数据发送速率",-1)),a[18]||(a[18]=t("p",null,"信道吞吐率：",-1)),a[19]||(a[19]=t("p",null,"信道吞吐率 = 信道利用率 * 发送方的发送速率",-1)),t("ol",u,[t("li",null,[a[12]||(a[12]=t("p",null,[t("strong",null,"滑动窗口协议"),e("，又分为两部分：")],-1)),t("ul",null,[a[11]||(a[11]=l('<li><p><strong>后退N帧协议（GBN）</strong></p><p>滑动窗口的概念：</p><ol><li><p>发送窗口：发送方维持一组连续的允许发送的帧的序列。图示：</p><p><img src="'+i+'" alt="sending-window"></p><p>发送方要发送的数据必须要在发送窗口中才能发送。</p></li><li><p>接收窗口：接收方维持一组连续的允许接收帧的序列。图示：</p><p><img src="'+T+'" alt="Receiving-Window"></p></li><li><p>GBN发送方必须响应的三件事</p><ul><li>上层的调用：上层要发送数据时，发送方先检查发送窗口是否已满，如果未满，则产生一个帧并将其发送，如果窗口已满，发送方只需将数据返回给上次暗示上层已满。上层等一会儿再发送。（实际实现中，发送方可以缓存这些数据，窗口不满时再发送帧）。</li><li>收到一个ACK（接收端发送的确认帧）：GBN协议中，对n号帧的确认采用累计确认的方式，标明接收方已经收到n号帧和它之前的全部帧。</li><li>超时事件：协议的名字为后退N帧/回退N帧，来源于出阿羡丢失和时延过长时发送方的行为。就像在停止-等待协议中一样，定时器将再次用于恢复数据帧或确认帧的丢失。如果出现超时，发送方重传所有已发送但未被确认的帧。</li></ul></li><li><p>接收方要做的事</p><ul><li>正确接收的情况：如果正确收到n号帧，并且排序，那么接收方为n帧发送一个ACK，并将该帧中的数据部分交付给上层。</li><li>数据丢失的情况：其余情况都丢弃帧，并为最近按序接收的帧重新发送ACK。接收方无需缓存任何失序帧，只需要维护一个信息：<code>expectedseqnum</code>（下一个按序接收的帧序号）。</li></ul></li></ol><p><strong>完整流程：</strong></p><p><img src="'+d+'" alt="The-complete-process-of-GBN"></p><p>对滑动窗口的思考：滑动窗口可以无限大吗？</p><p>若采用n个比特对帧编号，那么发送窗口的尺寸W~T~应满足：1&lt;= W~T~&lt;= 2^n^-1。因为发送窗口尺寸过大，就会使得接收方无法区别新帧和旧帧。</p><p>总结：</p><ol><li>累积确认（偶尔捎带确认）</li><li>接收方只按顺序接收帧，不按序无情丢弃</li><li>确认序列号最大的，按序到达的帧</li><li>发送窗口最大为2^n^-1，接收窗口为1。</li></ol></li>',1)),t("li",null,[a[10]||(a[10]=l("<p><strong>选择重传协议（SR）</strong>:</p><ol><li>SR发送方必须响应的三件事 <ul><li>上层的调用：从上层收到数据之后，SR发送方检查下一个可用于该帧的序号，如果序号位于发送窗口内，则发送数据帧，否则就像GBN一样，要么将数据缓存，要么返回给上层之后再传输。</li><li>收到一个ACK：加入该帧序号在窗口内，则SR发送方将那个被确认的帧标记为已接收。如果该帧序号事窗口的下届（最左边第一个窗口对应的序号），则窗口向前移动道具有最小序号的未确认处。如果窗口移动了并且有序号在窗口内的未发送帧，则发送这些帧。</li><li>超时事件：每个帧都有自己的定时器，一个超时事件发生后只重传一个帧</li></ul></li><li>接收方要做的事 <ul><li>SR接收方将确认一个正确接收的帧而不管其是否按序。失序的帧将被缓存，并返回给发送方一个该帧的确认帧【收谁确认谁】，直到所有帧（即序号更小的帧）皆被收到为止，这时才可以将一批帧按序交付给上层，然后向前移动滑动窗口。</li></ul></li></ol><p>总结：</p>",3)),t("ol",null,[a[7]||(a[7]=t("li",null,[t("p",null,"对数据帧逐一确认，收一个确认一个")],-1)),a[8]||(a[8]=t("li",null,[t("p",null,"只重传出错帧")],-1)),a[9]||(a[9]=t("li",null,[t("p",null,"接收方有缓存")],-1)),t("li",null,[a[6]||(a[6]=t("p",null,"最大滑动窗口长度",-1)),t("mjx-container",H,[(Q(),n("svg",c,a[4]||(a[4]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(704,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1582,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2111,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(2973.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(4029.7,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1637,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2166,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mo" transform="translate(7042.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(8098.3,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(600,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1378,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g></g></g>',1)]))),a[5]||(a[5]=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msub",null,[t("mi",null,"w"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"T"),t("mi",null,"m"),t("mi",null,"a"),t("mi",null,"x")])]),t("mo",null,"="),t("msub",null,[t("mi",null,"w"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"R"),t("mi",null,"m"),t("mi",null,"a"),t("mi",null,"x")])]),t("mo",null,"="),t("msup",null,[t("mn",null,"2"),t("mrow",{"data-mjx-texclass":"ORD"},[t("mi",null,"n"),t("mo",null,"−"),t("mn",null,"1")])])])],-1))])])])])])])]),a[20]||(a[20]=t("p",null,[t("strong",null,"可靠传输、滑动窗口、流量控制之间的关系：")],-1)),a[21]||(a[21]=t("p",null,"可靠传输：发送端发送啥接收端收啥。",-1)),a[22]||(a[22]=t("p",null,"流量控制：控制发送速率，使接收方有足够的缓冲空间来接收每一帧。",-1)),a[23]||(a[23]=t("p",null,"滑动窗口解决：",-1)),a[24]||(a[24]=t("ol",null,[t("li",null,"流量控制（收不下就不给确认，想发也发不了）"),t("li",null,"可靠传输（发送方自动重传）")],-1))]),t("li",null,[a[37]||(a[37]=l("<p>差错控制（帧错/位错）。</p><p><strong>差错从何而来？</strong></p><p>概括来说，传输中的差错都是由于噪声引起的。</p><p><strong>全局性</strong>：由于线路本身电气特性所产生的随机噪声，是信道固有的，随机存在的。解决办法：提高信噪比来减少或避免干扰。</p><p><strong>局部性</strong>：外界特定的短暂原因所造成的冲击噪声，是产生差错的主要原因。解决办法，通常利用编码技术来解决。</p><p><strong>会产生哪些差错</strong>：</p><ol><li>位错：比特位出错，1变成0，0变成1。</li><li>帧错： <ul><li>丢失：收到[#1]-[#3]</li><li>重复：收到[#1]-[#2]-[#2]-[#3]</li><li>失序：收到[#1]-[#3]-[#2]</li></ul></li></ol><p><strong>差错控制</strong>：分为两部分</p>",8)),t("ol",null,[a[36]||(a[36]=l("<li><p>检错编码：</p><p>数据链路层编码和物理层的数据编码与调制不同。物理层编码针对的是<strong>单个比特</strong>，解决传输过程中比特的同步等问题，如曼彻斯特编码。而数据链路层的编码针对的是一组比特，它通过冗余码的技术实现一组二进制比特串在传输过程是否出现了差错。</p><p><strong>冗余编码</strong>：在数据发送之前，先按某种关系附加上一定的冗余位，构成一个符合某一规则的码字后再发送。当要发送的有效数据变化时，相应的冗余位也随之变化，使码字遵从不变的规则。接收端根据收到码字是否仍符合规则，从而判断是否出错。</p><p>检错编码分为两种：</p><ul><li><p><strong>奇偶校验码</strong></p><p>n -1 位信息元，1位检验元。</p><ul><li>奇校验码：在 n-1 位信息元之前加上一个校验元，使得“1”的个数为奇数</li><li>偶检验码：在 n-1 位信息元之前加上一个校验元，使得“1”的个数为偶数</li></ul><p>特点：只能检查出奇数个比特错误，检查能力为50%。</p></li><li><p><strong>CRC--循环冗余码</strong>：</p><p>CRC循环冗余码利用除法及余数的原理，实现错误侦测的功能。</p><ol><li>数据表示：传输的数据首先是一个数据比特流。</li><li>生成多项式：CRC使用生成多项式是固定的，用于进行多项式除法运算。</li><li>冗余码：通过多项式除法运算得到的余数即为CRC检验码，也称冗余码。这个余数会作为冗余信息附加到原始数据末尾，一起发送给接受方。</li></ol><p><strong>例子</strong>：要发送的数据是 <code>1101 0110 11</code>，采用CRC检验，生成多项式是<code>10011</code>，那么最终发送的数据应该是？</p><p>最终发送的数据 = 原始数据 + 帧检验序列FCS</p><p>计算冗余码的步骤：</p><ol><li>加0，假设生成多项式G(x)的最高阶为r,则加r个0.</li><li>模2除法。数据加0之后除以多项式，余数为冗余码 FCS。</li></ol><p><code>10011</code> 表示成多项式为：x^4^+x^1^+x^0^ = x^4^+x^1^+1</p><p>阶为4。tip:多项式N位，阶为 N-1。</p><p><code>10011</code>表示为多项式为什么是：x^4^+x^1^+x^0^，通过以下推导而来：</p><p><code>10011</code>表示5位二进制数据，则最高阶为：5-1 = 4，函数表达式自变量最高阶的幂为4，完整表达式为：(1* x^4^)+(0 * x^3^) + (0 * x^2^)+ (1 * x^1^) + (1 * x^0^)</p><p>在这个例子中最该阶是 4，对原始数据补0得到<code>1101 0110 11 0000</code>，再除以生成多项式<code>10011</code>（二进制除法不深入研究，应该不难），得道余数<code>1101</code>就是FCS冗余码。然后再原始数据末尾添加冗余码得到<code>1101 0110 11 1101</code>就是发送出去的数据。</p><p>接收端检错过程：</p><p>把收到的每一个帧都除以同样的除数，然后检查得到的余数R。</p><ol><li>余数为0，判定这个帧没有差错，接受。</li><li>余数不为0，判定这个帧由差错，但是无法确定到 <code>位</code>，丢弃。</li></ol><p>FCS的生成以及接收端CRC检验都是硬件实现，处理很迅速，因此不会延误数据的发送。</p></li></ul></li>",1)),t("li",null,[a[35]||(a[35]=t("p",null,"纠错编码",-1)),t("ul",null,[t("li",null,[a[34]||(a[34]=l("<p>海明码：</p><p><strong>前置概念</strong></p><ol><li>海明距离：两个合法编码（码字）的对应比特取值不同的比特数称为这个两个码字的海明距离（码距），一个有效编码集中，任意两个合法编码（码字）的海明距离的最小值称为该编码集的<strong>海明距离（码距）</strong>。</li></ol><p>海明码特点：</p><ol><li>发现错误</li><li>找到位置</li><li>纠正错误</li></ol><p>海明码工作流程：</p>",6)),t("ol",null,[t("li",null,[a[27]||(a[27]=t("p",null,"确定检验码位数r",-1)),a[28]||(a[28]=t("p",null,"如果数据/信息由m位，冗余码/检验码有r位，则检验码一共有2^r^种取值。",-1)),a[29]||(a[29]=t("p",null,"海明不等式：",-1)),t("mjx-container",y,[(Q(),n("svg",w,a[25]||(a[25]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(484,413) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(1165.3,0)"><path data-c="2267" d="M83 733Q83 741 89 747T99 753Q107 753 253 685T543 548T687 478Q694 473 694 463T687 448Q685 446 395 309L107 173H101Q83 175 83 193Q83 194 83 196Q82 203 98 212Q117 222 248 284Q326 321 378 345L626 463L360 589Q291 622 200 665Q112 706 98 714T83 733ZM84 39Q84 49 99 59H678Q694 53 694 39Q694 26 679 19H98Q84 26 84 39ZM83 -157Q83 -153 84 -150T86 -145T89 -141T92 -139T96 -137T99 -135H678Q694 -146 694 -155Q694 -168 679 -175H98Q84 -168 83 -157Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2221.1,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3321.3,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4321.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4994.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5995,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g>',1)]))),a[26]||(a[26]=t("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[t("msup",null,[t("mi",null,"r"),t("mn",null,"2")]),t("mo",null,"≧"),t("mi",null,"m"),t("mo",null,"+"),t("mi",null,"r"),t("mo",null,"+"),t("mn",null,"1")])],-1))]),a[30]||(a[30]=t("p",null,"例子：要发送的数据：D = 1100",-1)),a[31]||(a[31]=t("p",null,"数据的位数：m = 4，",-1)),a[32]||(a[32]=t("p",null,"满足不等式的最小r为3，也就是D=1100的海明码应该有4 + 3 = 7 位，其中原始数据4位，检验码3位。",-1))]),a[33]||(a[33]=l('<li><p>确定检验码和数据的位置</p><p>D=1100</p><p>检验码放在序号位2^n^的位置，数据按序填上</p><table tabindex="0"><thead><tr><th>序号</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>值</td><td>1</td><td>1</td><td>0</td><td>X~4~</td><td>0</td><td>x~2~</td><td>x~1~</td></tr></tbody></table></li><li><p>求出检验码的值</p><table tabindex="0"><thead><tr><th>二进制</th><th>111</th><th>110</th><th>101</th><th>100</th><th>011</th><th>010</th><th>001</th></tr></thead><tbody><tr><td>序号</td><td>7</td><td>6</td><td>5</td><td>4</td><td>3</td><td>2</td><td>1</td></tr><tr><td>值</td><td>1</td><td>1</td><td>0</td><td>X~4~</td><td>0</td><td>x~2~</td><td>x~1~</td></tr></tbody></table><p>4号检验码负责4,5,6,7的检验</p><p>2号检验码负责2,3,6,7的检验</p><p>1号检验码负责1,3,5,7的检验</p><p>推导验证码的值，采用偶检验，</p><ul><li>推导x~4~的值：4号检验码负责4,5,6,7的检验，则4,5,6,7位的组合要形成偶数个1，已知5,6,7位分别为 0,1,1所以x~4~为0，</li><li>推导x~2~的值：2号检验码负责2,3,6,7的检验，则2,3,6,7位的组合要形成偶数个1，已知3,6,7位分别为 0,1,1所以x~4~为0，</li><li>推导x~1~的值：1号检验码负责1,3,5,7的检验，则1,3,5,7位的组合要形成偶数个1，已知3,5,7位分别为 0,0,1所以x~4~为1，</li></ul><p>就可以得到完整的海明码为：</p><table tabindex="0"><thead><tr><th>序号</th><th>7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>值</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td></tr></tbody></table></li><li><p>检错并纠错</p><p>若接受方收到的数据为<code>1110001</code>，检错类似奇偶校验。这里采用偶校验（二进制组合具有偶数个1）。</p><p>4号检验码负责4,5,6,7的检验 =&gt; 0，1，1，1 =&gt; 不符合偶校验</p><p>2号检验码负责2,3,6,7的检验 =&gt; 0，0，1，1 =&gt; 符合偶校验</p><p>1号检验码负责1,3,5,7的检验 =&gt;1，0，1，1 =&gt; 不符合偶校验</p><p>得出结论：接收端接收到的数据出现了差错。</p><p><strong>如何纠错：</strong></p><ol><li><p>找到不满足奇/偶检验的分组取交集，并与符合检验的分组取差集 。</p></li><li><p>x~4~，0，1，1，1 =&gt; x~4~ = 1</p><p>x~2~，0，0，1，1 =&gt;x~2~ = 0</p><p>x~1~，1，0，1，1 =&gt; x~1~ = 1</p><p>将101转成10进制数得5，推断出第5位比特数出错了。</p></li></ol></li>',3))])])])])])])])])}const Z=r(p,[["render",v]]);export{C as __pageData,Z as default};
